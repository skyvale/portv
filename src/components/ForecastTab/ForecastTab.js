import React from 'react';
import './ForecastTab.css';

import cloudyIcon from '../../assets/clouds.png';
import rainIcon from '../../assets/rain.png';
import drizzleIcon from '../../assets/drizzle.png';
import thunderstormIcon from '../../assets/thunderstorm.png';
import snowIcon from '../../assets/snow.png';
import clearIcon from '../../assets/clear.png';

/*
    This component is the forecast tabs that will be generated by WeatherSection.js.
*/

// ===============================================

const ForecastTab = (props) => {

    //console.log('forecast tab props: ', props);

    let currentForecast = props.weatherData.weather[0].main;

    // function that determines what forecast icon to be inserted into jsx
    const determineForecastIcon = () => {
        switch (currentForecast) {
            case 'Clouds':
                return <img className='forecast-icon' src={cloudyIcon} alt='clouds forecast' />
            case 'Rain':
                return <img className='forecast-icon' src={rainIcon} alt='rain forecast' />
            case 'Snow':
                return <img className='forecast-icon' src={snowIcon} alt='snow forecast' />
            case 'Clear':
                return <img className='forecast-icon' src={clearIcon} alt='clear forecast' />
            case 'Drizzle':
                return <img className='forecast-icon' src={drizzleIcon} alt='drizzle forecast' />
            case 'Thunderstorm':
                return <img className='forecast-icon' src={thunderstormIcon} alt='thunderstorm forecast' />
            default:
                return <img className='forecast-icon' src={cloudyIcon} alt='clouds forecast' />           
        }

    }

    return(
        <div className={(props.active) ?  "active forecast-tab" : "forecast-tab"} onClick={()=> props.forecastTabClick(props.tabIndex)}>
            <div className="forecast-temp">
                {Math.round(props.weatherData.main.temp_max)}Â°F
            </div>
            <div className="forecast-weather">
                {determineForecastIcon()}
            </div>   
        </div>
    );
}

export default ForecastTab;