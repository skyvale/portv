[{"C:\\Users\\skyla\\OneDrive\\Desktop\\Repos\\portv\\src\\index.js":"1","C:\\Users\\skyla\\OneDrive\\Desktop\\Repos\\portv\\src\\App.js":"2","C:\\Users\\skyla\\OneDrive\\Desktop\\Repos\\portv\\src\\components\\HomePage\\HomePage.js":"3","C:\\Users\\skyla\\OneDrive\\Desktop\\Repos\\portv\\src\\components\\DataPage\\DataPage.js":"4","C:\\Users\\skyla\\OneDrive\\Desktop\\Repos\\portv\\src\\components\\Footer\\Footer.js":"5","C:\\Users\\skyla\\OneDrive\\Desktop\\Repos\\portv\\src\\components\\SearchBox\\SearchBox.js":"6","C:\\Users\\skyla\\OneDrive\\Desktop\\Repos\\portv\\src\\components\\MapSection\\MapSection.js":"7","C:\\Users\\skyla\\OneDrive\\Desktop\\Repos\\portv\\src\\components\\WeatherSection\\WeatherSection.js":"8","C:\\Users\\skyla\\OneDrive\\Desktop\\Repos\\portv\\src\\components\\MapInfo\\MapInfo.js":"9","C:\\Users\\skyla\\OneDrive\\Desktop\\Repos\\portv\\src\\components\\BikeMap\\BikeMap.js":"10","C:\\Users\\skyla\\OneDrive\\Desktop\\Repos\\portv\\src\\components\\ForecastTab\\ForecastTab.js":"11","C:\\Users\\skyla\\OneDrive\\Desktop\\Repos\\portv\\src\\components\\CurrentForecast\\CurrentForecast.js":"12"},{"size":220,"mtime":1607315782750,"results":"13","hashOfConfig":"14"},{"size":514,"mtime":1608184597093,"results":"15","hashOfConfig":"14"},{"size":780,"mtime":1608509095759,"results":"16","hashOfConfig":"14"},{"size":856,"mtime":1608282868076,"results":"17","hashOfConfig":"14"},{"size":264,"mtime":1607966464987,"results":"18","hashOfConfig":"14"},{"size":1370,"mtime":1608503805249,"results":"19","hashOfConfig":"14"},{"size":447,"mtime":1608420884107,"results":"20","hashOfConfig":"14"},{"size":3820,"mtime":1608510892952,"results":"21","hashOfConfig":"14"},{"size":728,"mtime":1608512586173,"results":"22","hashOfConfig":"14"},{"size":2671,"mtime":1608420884104,"results":"23","hashOfConfig":"14"},{"size":2189,"mtime":1608465290954,"results":"24","hashOfConfig":"14"},{"size":8786,"mtime":1608465661125,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"1644ql",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"28"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"C:\\Users\\skyla\\OneDrive\\Desktop\\Repos\\portv\\src\\index.js",[],["52","53"],"C:\\Users\\skyla\\OneDrive\\Desktop\\Repos\\portv\\src\\App.js",[],"C:\\Users\\skyla\\OneDrive\\Desktop\\Repos\\portv\\src\\components\\HomePage\\HomePage.js",[],"C:\\Users\\skyla\\OneDrive\\Desktop\\Repos\\portv\\src\\components\\DataPage\\DataPage.js",[],"C:\\Users\\skyla\\OneDrive\\Desktop\\Repos\\portv\\src\\components\\Footer\\Footer.js",[],"C:\\Users\\skyla\\OneDrive\\Desktop\\Repos\\portv\\src\\components\\SearchBox\\SearchBox.js",[],"C:\\Users\\skyla\\OneDrive\\Desktop\\Repos\\portv\\src\\components\\MapSection\\MapSection.js",[],"C:\\Users\\skyla\\OneDrive\\Desktop\\Repos\\portv\\src\\components\\WeatherSection\\WeatherSection.js",["54"],"C:\\Users\\skyla\\OneDrive\\Desktop\\Repos\\portv\\src\\components\\MapInfo\\MapInfo.js",[],"C:\\Users\\skyla\\OneDrive\\Desktop\\Repos\\portv\\src\\components\\BikeMap\\BikeMap.js",["55","56","57"],"import React, { useState, useEffect } from 'react';\r\nimport ReactMapGL from 'react-map-gl';\r\nimport './BikeMap.css';\r\n\r\n// uses the MapBox API for the map and the Google Geocoding API for the location\r\n\r\n// =====================================\r\n\r\nconst BikeMap = (props) => {\r\n\r\n    // hook for getting the location data from the google api\r\n    const [location, setLocation] = useState({});\r\n    const [latitude, setLatitude] = useState(0);\r\n    const [longitude, setLongitude] = useState(0);\r\n\r\n    // MapBox API stuff\r\n    const mapboxApiAccessToken = 'pk.eyJ1Ijoic2t5dmFsZSIsImEiOiJja2lueDIzMDcxNzhiMnNzdjdvbGlreGNuIn0.TuSm75u2GLQlTdA2YOf4wQ';\r\n    //const [viewport, setViewport] = useState({});\r\n    const [viewport, setViewport] = useState({\r\n        latitude: 36,\r\n        longitude: -81,\r\n        zoom: 10\r\n    });\r\n \r\n    // checks if the query was successfully sent in the props, and if it was, then it will run the api fetch request\r\n    useEffect(()=>{\r\n        if(props && props.query && props.query !== ''){\r\n            //console.log('bikemap props: ', props);\r\n            getLatAndLong(props.query);            \r\n        }\r\n\r\n    },[props, props.query]);\r\n\r\n\r\n    // Google Geocoding API stuff\r\n    const googleAPIkey = 'AIzaSyCjwsWu1EqiE2WazgNayzqUIHMpnHAsDZo';\r\n        \r\n    // using the google api, determine and the latitude and longitude based on the location the user entered\r\n\tconst getLatAndLong = (query) => {\r\n        fetch(`https://maps.googleapis.com/maps/api/geocode/json?address=+${query},+USA&key=${googleAPIkey}`)\r\n            .then(res => res.json())\r\n            .then(result => {\r\n                console.log(result);\r\n                setLocation(result);\r\n                setViewport({\r\n                    latitude: result.results[0].geometry.location.lat, \r\n                    longitude: result.results[0].geometry.location.lng,\r\n                    zoom: 10\r\n                }); \r\n                setLatitude(result.results[0].geometry.location.lat);\r\n                setLongitude(result.results[0].geometry.location.lng);\r\n            });\r\n    }\r\n\r\n    //!!TODO add marker to current city using the set lat/long variables, not the ones in viewport\r\n    return(\r\n        <div className='map-container'>\r\n            <ReactMapGL\r\n                {...viewport }\r\n                width='600px'\r\n                height='600px'\r\n                mapboxApiAccessToken={mapboxApiAccessToken}\r\n                mapStyle='mapbox://styles/skyvale/ckiny3d0h127l18n65lkffaqw'\r\n                onViewportChange = {viewport => {setViewport(viewport)}} >         \r\n            </ReactMapGL>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default BikeMap;","C:\\Users\\skyla\\OneDrive\\Desktop\\Repos\\portv\\src\\components\\ForecastTab\\ForecastTab.js",[],"C:\\Users\\skyla\\OneDrive\\Desktop\\Repos\\portv\\src\\components\\CurrentForecast\\CurrentForecast.js",[],{"ruleId":"58","replacedBy":"59"},{"ruleId":"60","replacedBy":"61"},{"ruleId":"62","severity":1,"message":"63","line":75,"column":60,"nodeType":"64","messageId":"65","endLine":75,"endColumn":62},{"ruleId":"66","severity":1,"message":"67","line":12,"column":12,"nodeType":"68","messageId":"69","endLine":12,"endColumn":20},{"ruleId":"66","severity":1,"message":"70","line":13,"column":12,"nodeType":"68","messageId":"69","endLine":13,"endColumn":20},{"ruleId":"66","severity":1,"message":"71","line":14,"column":12,"nodeType":"68","messageId":"69","endLine":14,"endColumn":21},"no-native-reassign",["72"],"no-negated-in-lhs",["73"],"array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","no-unused-vars","'location' is assigned a value but never used.","Identifier","unusedVar","'latitude' is assigned a value but never used.","'longitude' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]